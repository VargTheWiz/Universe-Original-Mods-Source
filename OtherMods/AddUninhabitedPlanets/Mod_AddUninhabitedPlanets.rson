{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -556,
  "ViewPos.y":  -209,
  "ScriptName":  "Mod_AddUninhabitedPlanets",
  "ScriptFileOut":  "H:\\Build\\Mod_AddUninhabitedPlanets.scr",
  "ScriptTextOut":  "H:\\Build\\Mod_AddUninhabitedPlanets.txt",
  "GraphPoint.Count":  12,
  "GraphLink.Count":  5,
  "GraphRectText.Count":  0,
  "Variables.Count":  5,
  "Stars.Count":  2,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  1,
  "Statements.Count":  0,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "InitGroup",
          "Pos.x":  190,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  5,
          "Owner":  64,
          "Group.Type":  1048576,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  270,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  3,
          "Total.Lines":  69,
          "Code.Type":  "Init",
          "Code":          
          [
              "int i, j, k;",
              "dword star, planet, planetCount;",
              "dword totalPlanets=20; //Кол-во создаваемых планет",
              "str planetName;",
              "i=1; //Заполнение массива названий необитаемых планет",
              "while(i) {",
              "    if(i<10) planetName=CT('PlanetName.'+'None'+'.00'+i);",
              "    else if(i<100) planetName=CT('PlanetName.'+'None'+'.0'+i);",
              "    else planetName=CT('PlanetName.'+'None'+'.'+i);",
              "    if(planetName) ArrayAdd(noneNamesArray, planetName);",
              "    else break;",
              "    i=i+1;",
              "}",
              "for(i=0; i<GalaxyStars(); i=i+1) {",
              "    star=GalaxyStar(i);",
              "    for(j=0; j<StarPlanets(star); j=j+1) {",
              "        planet=StarPlanets(star, j);",
              "        if(PlanetOwner(planet)!=None) continue;",
              "        planetCount=planetCount+1;",
              "        planetName=Name(planet);",
              "        for(k=1; k<ArrayDim(noneNamesArray); k=k+1) {",
              "            if(planetName==noneNamesArray[k]) {",
              "                ArrayDelete(noneNamesArray, k);",
              "                break;",
              "            }",
              "        }",
              "    }",
              "    if(planetCount==1) ArrayAdd(onePlanetArray, Id(star)-1);",
              "    else if(planetCount==2) ArrayAdd(twoPlanetsArray, Id(star)-1);",
              "    else if(planetCount==3) ArrayAdd(threePlanetsArray, Id(star)-1);",
              "    planetCount=0;",
              "}",
              "planetCount=ArrayDim(onePlanetArray)-1+(2*(ArrayDim(twoPlanetsArray)-1))+(3*(ArrayDim(threePlanetsArray)-1));",
              "totalPlanets=max(totalPlanets, (ArrayDim(onePlanetArray)-1)); //Если систем с одной планетой > 20",
              "totalPlanets=min(200-planetCount, totalPlanets); //Но более 200 незаселенных планет на Галактику",
              "for(i=1; i<ArrayDim(onePlanetArray); i=i+1) {",
              "    star=GalaxyStar(onePlanetArray[i]);",
              "    planet=CreateUninhabitedPlanet(star);",
              "    ArrayAdd(twoPlanetsArray, Id(star)-1);",
              "}",
              "ArrayDelete(twoPlanetsArray, 0); //Нулевой элемент будет перемешиваться, если его не удалить",
              "ArrayRandomize(10, twoPlanetsArray);",
              "j=totalPlanets-(ArrayDim(onePlanetArray)-1);",
              "for(i=0; i<j; i=i+1) {",
              "    star=GalaxyStar(twoPlanetsArray[i]);",
              "    planet=CreateUninhabitedPlanet(star);",
              "}",
              "//Функция создания необитаемой планеты. Параметр - указатель на звезду, где будет создана планета.",
              "//Возвращает указатель на созданную планету.",
              "function CreateUninhabitedPlanet(dword star) {",
              "    dword planet, tempRadius;",
              "    int tRnd, i;",
              "    //Расчет орбиты",
              "    tRnd=Rnd(0, StarPlanets(star)); //Номер новой планеты в списке планет системы",
              "    if(tRnd==StarPlanets(star)) planet=CreatePlanet(star);",
              "    else {",
              "        tempRadius=PlanetOrbitRadius(StarPlanets(star, tRnd));",
              "        for(i=tRnd; i<StarPlanets(star); i=i+1) PlanetOrbitRadius(StarPlanets(star, i), PlanetOrbitRadius(StarPlanets(star, i))+400+round(Rnd(0, 100), 10));",
              "        planet=CreatePlanet(star, tempRadius);",
              "    }",
              "    PlanetOwner(planet, None);",
              "    //Название планеты",
              "    tRnd=Rnd(1, ArrayDim(noneNamesArray)-1);",
              "    SetName(planet, noneNamesArray[tRnd]);",
              "    ArrayDelete(noneNamesArray, tRnd);",
              "    for(i=PlanetItems(planet)-1; i>=0; i=i-1) AddItemToPlanet(planet, GetItemFromPlanet(planet, i));",
              "    result=planet;",
              "}",
              "AllShipOut();"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  190,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  1,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  90,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  4,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  190,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  0,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        },
        {
          "Type":  "TStar",
          "Name":  "PlayerStar",
          "Pos.x":  90,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  6,
          "Constellation":  0,
          "Priority":  1,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "InitState",
          "Pos.x":  190,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  2,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "onePlanetArray",
          "Pos.x":  310,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "twoPlanetsArray",
          "Pos.x":  310,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "threePlanetsArray",
          "Pos.x":  310,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  9,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "noneNamesArray",
          "Pos.x":  310,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tempArr",
          "Pos.x":  310,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  1,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  5,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  5,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  6,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TStarLink",
      "Begin":  6,
      "End":  0,
      "Nom":  0,
      "Arrow":  false,
      "DistMin":  0,
      "DistMax":  150,
      "Hole":  false    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}